[versions]
agp = "8.7.3"
androidx-activityCompose = "1.9.3"
androidx-lifecycle = "2.8.4"
blessed = "0.64"
compose-multiplatform = "1.7.0"
dbusJavaTransportNativeUnixsocket = "4.3.2"
filekitCompose = "0.8.8"
junit = "4.13.2"
desugar_jdk_libs_minimal = "2.1.4"
dnsSdKt = "1.0.4"
kotlin = "2.1.0"
kotlinx-coroutines = "1.9.0"
foundationLayoutAndroid = "1.7.6"
material3Android = "1.3.1"
log4jSlf4j2Impl = "2.20.0"
logbackClassic = "1.5.16"
uiGraphicsAndroid = "1.7.6"
composeMaterial = "1.4.0"
firebaseInappmessagingKtx = "21.0.1"
appcompat = "1.7.0"
material = "1.12.0"
adaptiveAndroid = "1.0.0"
material3AdaptiveAndroid = "1.0.0-alpha06"
core = "1.13.0"

[libraries]
androidx-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3Android" }
filekit-compose = { module = "io.github.vinceglb:filekit-compose", version.ref = "filekitCompose" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
blessed = { module = "com.github.weliem.blessed-bluez:blessed", version.ref = "blessed" }
dbus-java-transport-native-unixsocket = { module = "com.github.hypfvieh:dbus-java-transport-native-unixsocket", version.ref = "dbusJavaTransportNativeUnixsocket" }
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs_minimal" }
desugar_jdk_libs_minimal = { module = "com.android.tools:desugar_jdk_libs_minimal", version.ref = "desugar_jdk_libs_minimal" }
dns-sd-kt = { module = "com.appstractive:dns-sd-kt", version.ref = "dnsSdKt" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
androidx-foundation-layout-android = { group = "androidx.compose.foundation", name = "foundation-layout-android", version.ref = "foundationLayoutAndroid" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }
androidx-ui-graphics-android = { group = "androidx.compose.ui", name = "ui-graphics-android", version.ref = "uiGraphicsAndroid" }
androidx-compose-material = { group = "androidx.wear.compose", name = "compose-material", version.ref = "composeMaterial" }
firebase-inappmessaging-ktx = { group = "com.google.firebase", name = "firebase-inappmessaging-ktx", version.ref = "firebaseInappmessagingKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4jSlf4j2Impl" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-adaptive-android = { group = "androidx.compose.material3.adaptive", name = "adaptive-android", version.ref = "adaptiveAndroid" }
androidx-material3-adaptive-android = { group = "androidx.compose.material3", name = "material3-adaptive-android", version.ref = "material3AdaptiveAndroid" }
androidx-core = { group = "androidx.core", name = "core", version.ref = "core" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }